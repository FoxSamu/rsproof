# Peano arithmetic using pure FOL equality
# This currently fails because of a unification bug

# Define equality:

    # Identity: x==x
    all x: Eq(x, x),

    # Reflexivity: x==y  <->  y==x
    all x, y: (Eq(x, y) <-> Eq(y, x)),

    # Transitivity: x==y  &  y==z  ->  x==z
    all x, y, z: ((Eq(x, y) & Eq(y, z)) -> Eq(x, z)),

    # Substitution: x==y  <->  f(x)==f(y)  for all functions
    all x, y: (Eq(x, y) <-> Eq(succ(x), succ(y))),
    all x, y, z: (Eq(x, y) <-> Eq(plus(x, z), plus(y, z))),
    all x, y, z: (Eq(x, y) <-> Eq(plus(z, x), plus(z, y))),
    all x, y: (Eq(x, y) <-> Eq(plus(x, x), plus(y, y))),


# Define plus

    # 0 + y = y
    all y: Eq(plus(zero, y), y),

    # succ(x) + y = x + succ(y)
    all x, y: Eq(plus(succ(x), y), plus(x, succ(y)))

|-

# Now we prove: 1 + 1 = 2
Eq(
    plus( succ(zero), succ(zero) ),
    succ(succ(zero))
)